{"ast":null,"code":"var _jsxFileName = \"/Users/hadie/Dev/sanbercode/Tugas/Week2/quiz/cra/src/App.js\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\n\nclass RangeConversion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._handleChange = e => {\n      this.props.onRangeChange(e.target.value);\n    };\n  }\n\n  render() {\n    const {\n      curLabel,\n      range\n    } = this.props;\n    var LabelName = \"\";\n\n    switch (curLabel) {\n      case \"m\":\n        LabelName = \"Meter\";\n        break;\n\n      case \"mm\":\n        LabelName = \"Milimeter\";\n        break;\n\n      default:\n        LabelName = \"Kilometer\";\n        break;\n    }\n\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }, LabelName, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: range,\n      onChange: this._handleChange,\n      step: curLabel === 'kg' ? 1 : 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onSubmit = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      alert(`${this.state.kilometer}km adalah ${this.state.meter}m dan ${this.state.milimeter}mm`);\n    };\n\n    this.onChangeKiloMeter = kilometer => {\n      let meter = (parseFloat(kilometer) / 1000).toString();\n      let milimeter = (parseFloat(kilometer) / (1000 * 1000)).toString();\n      this.setState({\n        kilometer,\n        meter,\n        milimeter\n      });\n    };\n\n    this.onChangeMeter = meter => {\n      let kilometer = (parseFloat(meter) * 1000).toString();\n      let milimeter = (parseFloat(meter) / 1000).toString();\n      this.setState({\n        kilometer,\n        meter,\n        milimeter\n      });\n    };\n\n    this.onChangeMiliMeter = milimeter => {\n      let kilometer = (parseFloat(milimeter) * (1000 * 1000)).toString();\n      let meter = (parseFloat(milimeter) * 1000).toString();\n      this.setState({\n        kilometer,\n        meter,\n        milimeter\n      });\n    };\n\n    this.state = {\n      kilometer: 0,\n      meter: 0,\n      milimeter: 0\n    };\n  }\n\n  render() {\n    const {\n      kilometer,\n      meter,\n      milimeter\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"Konversi Jarak\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this._onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RangeConversion, {\n      curLabel: \"km\",\n      range: kilometer,\n      onRangeChange: this.onChangeKiloMeter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(RangeConversion, {\n      curLabel: \"m\",\n      range: meter,\n      onRangeChange: this.onChangeMeter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(RangeConversion, {\n      curLabel: \"mm\",\n      range: milimeter,\n      onRangeChange: this.onChangeMiliMeter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Coba Konversi\")), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    }, \"Rincian Hasil\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hadie/Dev/sanbercode/Tugas/Week2/quiz/cra/src/App.js"],"names":["React","RangeConversion","Component","_handleChange","e","props","onRangeChange","target","value","render","curLabel","range","LabelName","App","constructor","_onSubmit","event","preventDefault","stopPropagation","alert","state","kilometer","meter","milimeter","onChangeKiloMeter","parseFloat","toString","setState","onChangeMeter","onChangeMiliMeter"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nclass RangeConversion extends React.Component{\n\n  _handleChange = (e) =>{\n    this.props.onRangeChange(e.target.value);\n  }\n\n  render(){\n    const {curLabel,range} = this.props;\n      var LabelName = \"\";\n\n      switch(curLabel){\n        case \"m\":\n          LabelName = \"Meter\";\n          break;\n          case \"mm\":\n            LabelName = \"Milimeter\";\n            break;\n          default:\n            LabelName = \"Kilometer\";\n            break;\n      }\n    return (\n      <fieldset>\n     <label>\n        {LabelName}<br/>\n       \n        <input type=\"number\" value={range} onChange={this._handleChange} step={curLabel ==='kg' ? 1:1000}/>\n      </label>\n      </fieldset>\n    )\n  }\n}\n\nclass App extends React.Component{\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      kilometer : 0,\n      meter:0,\n      milimeter:0\n    }\n  }\n  _onSubmit = (event)=>{\n    event.preventDefault();\n    event.stopPropagation();  \n   \n    alert(`${this.state.kilometer}km adalah ${this.state.meter}m dan ${this.state.milimeter}mm`)\n  }\n\n  onChangeKiloMeter = kilometer =>{\n    let meter = (parseFloat(kilometer) / 1000).toString();\n    let milimeter =  (parseFloat(kilometer) /  (1000 *1000)).toString();\n    this.setState({kilometer,meter,milimeter})\n  }\n\n  onChangeMeter = meter =>{\n    let kilometer =  (parseFloat(meter) * 1000).toString();\n    let milimeter =  (parseFloat(meter) /  1000).toString();\n    this.setState({kilometer,meter,milimeter})\n  }\n \n  onChangeMiliMeter = milimeter =>{\n    let kilometer =  (parseFloat(milimeter) * (1000 *1000)).toString();\n    let meter =  (parseFloat(milimeter) *  1000).toString();\n    this.setState({kilometer,meter,milimeter})\n  }\n\n\n  render(){\n    const {kilometer,meter,milimeter} = this.state;\n\n      return (\n    <div className=\"App\">\n      <h1>Konversi Jarak</h1>\n      <form onSubmit={this._onSubmit}>\n         <RangeConversion curLabel=\"km\" range={kilometer} onRangeChange={this.onChangeKiloMeter}/>\n         <RangeConversion curLabel=\"m\" range={meter} onRangeChange={this.onChangeMeter}/>\n         <RangeConversion curLabel=\"mm\" range={milimeter} onRangeChange={this.onChangeMiliMeter}/>\n          <button type=\"submit\">Coba Konversi</button>\n          </form>\n       <h4>Rincian Hasil</h4>\n\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}